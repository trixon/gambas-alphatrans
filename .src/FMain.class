' Gambas class file

Private Const KEY_MENUBAR As String = "menubar"

Private $sTempFile As String = Temp$()
Private $sFilePath As String
Private $sFileEncoding As String
Private $sFileType As String
Private $sMode As String
Private $sOmit As String
Private $aCharacterSets As String[]

Public Sub _new()

End

Static Public Sub Run()

  Dim hForm As New FMain

  hForm.Show()

End

Public Sub Action_Activate(key As String) As Boolean

  Select Case key
    Case "about"
      About()

    Case "close"
      CloseFile()

    Case "menubar"
      Menubar()

    Case "open"
      OpenFile()

    Case "save"
      SaveFile()

    Case "quit"
      Me.Close

    Default
      Print "Unknown action: " & key

  End Select

End

Public Sub Form_KeyPress()

  If Key.Code = Key.Esc Then
    Me.Close()
  Endif

End

Public Sub Form_Open()

  Settings.Read(Me)
  $aCharacterSets = MUtil.CharacterSets()
  lstFrom.List = MUtil.CharacterSets()
  lstTo.List = lstFrom.List
  UpdateAvailability(False)

End

Public Sub Form_Close()

  Settings.Write(Me)

End

Private Sub About()

  Dim hForm As New FAbout

  With hForm
    .AppAuthor = "Patrik Karlsson"
    .AppCopyright = ("Copyright © 2014 Patrik Karlsson")
    .AppDescription = ("iconv gui")
    .AppLogo = Picture.Load("logo.png")
  End With

  hForm.Run()

End

Private Sub CloseFile()

  txaFrom.Clear()
  txaTo.Clear()
  lstFrom.Index = 0
  lstTo.Index = 0
  UpdateAvailability(False)

End

Private Sub OpenFile()

  Dialog.Title = ("Open")

  If Dialog.OpenFile() Then
    Return
  Endif

  $sFilePath = Dialog.Path
  $sFileEncoding = MUtil.MimeEncoding($sFilePath)
  $sFileType = MUtil.MimeType($sFilePath)

  If $sFileEncoding = "BINARY" Then
    Message.Title = ("Error")
    Message.Error(Subst("&1 is a binary file.", $sFilePath))
  Else
    txaFrom.Text = Conv(File.Load($sFilePath), $sFileEncoding, "UTF-8")

    txaTo.Text = $sFileEncoding
    lstFrom.Index = lstFrom.Find($sFileEncoding)
    lstTo.Index = lstTo.Find($sFileEncoding)
    UpdateAvailability(True)
  Endif

End

Private Sub SaveFile()

  Dialog.Title = ("Save As")
  If Dialog.SaveFile() Then Return
  If Exist(Dialog.Path) Then
    Kill Dialog.Path
  Endif
  Copy $sTempFile To Dialog.Path
Catch
  Message.Info(Error.Text)

End

Private Sub Preview()

  Dim sBaseCommand As String = "iconv --from-code &1 --to-code &2&3 &4 --output &5 &6"
  Dim sCommand As String
  Dim sStatus As String
  Dim sResult As String

  File.Save($sTempFile, "")
  txaTo.Text = "Trying to load the converted file back to UTF-8"
  sCommand = Subst(sBaseCommand, lstFrom.Text, lstTo.Text, $sMode, $sFilePath, $sTempFile, $sOmit) & " 2>&1"
  Debug sCommand
  Try Shell sCommand To sStatus
  sStatus = Trim(sStatus)
  Debug sStatus

  If sStatus Then
    Message.Title = ("Error")
    Message.Error(sStatus)
  Endif

  Try sResult = Conv(File.Load($sTempFile), lstTo.Text, "UTF-8")
  txaTo.Text = sResult

End

Public Sub Preview_Click()

  Preview()

End

Public Sub Preview_Select()

  'Preview()

End

Private Sub Menubar()

  Me.Menus.Visible = Settings[KEY_MENUBAR, False]

End

Public Sub UpdateAvailability(bOpen As Boolean)

  mnuClose.Enabled = bOpen
  mnuSave.Enabled = bOpen
  tbtSave.Enabled = bOpen
  chkOmit.Enabled = bOpen
  optIgnore.Enabled = bOpen
  optNormal.Enabled = bOpen
  optTranslit.Enabled = bOpen
  txtFrom.Enabled = bOpen
  txtTo.Enabled = bOpen
  lstFrom.Enabled = bOpen
  lstTo.Enabled = bOpen

  If bOpen Then
    lblFrom.Text = Subst(("Preview (&1➜UTF-8)"), lstFrom.Text) '$sFilePath
    'lblStatus.Text = $sFileEncoding & " " & $sFileType
    lblStatusEncoding.Text = Subst("Encoding: &1  Type: &2  &3", $sFileEncoding, $sFileType, $sFilePath)
  Else
    lblFrom.Text = ""
    lblTo.Text = ""
    lblStatusEncoding.Text = ""
  Endif

End

Public Sub txtFrom_Change()

  lstFrom.List = MUtil.FilterStringArray($aCharacterSets, txtFrom.Text)

End

Public Sub txtTo_Change()

  lstTo.List = MUtil.FilterStringArray($aCharacterSets, txtTo.Text)

End

Public Sub Mode_Click()

  $sMode = Last.Tag

End

Public Sub chkOmit_Click()

  If chkOmit.Value Then
    $sOmit = "-c"
  Else
    $sOmit = ""
  Endif

End
